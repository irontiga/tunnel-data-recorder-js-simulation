{"version":3,"sources":["../src/js/RangeSensor.js","../src/js/Button.js","../src/js/Camera.js","../src/js/Display.js","../src/js/Tracker.js","../src/js/getDisplayHTML.js","../src/js/convertRawRangeSensorData.js","../src/js/main.js","js/app.js"],"names":["RangeSensor","pin","_pin","_sensorValue","value","Button","cb","_cb","Camera","_outVoltage","_onTrigger","setTimeout","Display","DISPLAY_SLEEP_TIMEOUT","_screenValue","_displaySleep","_sleepTimeout","_changed","clearTimeout","Tracker","_total","_ranges","_onReset","range","push","getDisplayHTML","total","ranges","map","r","join","convertRawRangeSensorData","rawData","LOOP_DELAY","RANGE_SENSOR_BASELINE","rangeSensorBaseline","DISPLAY_BUTTON_PIN","RESET_BUTTON_PIN","CALIBRATE_BUTTON_PIN","RANGE_SENSOR_PIN","CAMERA_PIN","DISPLAY_PIN","display","camera","rangeSensor","tracker","displayButton","wake","resetButton","reset","calibrateButton","read","updateDisplay","write","onReset","animalPresent","loop","trigger","track","displayDiv","document","getElementById","simulatedRangeInput","wakeButton","flash","resetStatsButton","onChange","innerHTML","screenValue","isAwake","classList","remove","add","onclick","onTrigger","animate","duration","oninput","e","rangeVal","target","setSimulatedData"],"mappings":"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","file":"app.77a6f64b.js","sourceRoot":"..\\public","sourcesContent":["class RangeSensor {\r\n    constructor (pin) {\r\n        this._pin = pin\r\n        this._sensorValue = 10\r\n    }\r\n\r\n    read () {\r\n        return this._sensorValue\r\n    }\r\n\r\n    setSimulatedData (value) {\r\n        this._sensorValue = value\r\n    }\r\n}\r\n\r\nexport default RangeSensor","class Button {\r\n    constructor (pin, cb) {\r\n        this._pin = pin\r\n        this._cb = cb\r\n    }\r\n\r\n    press () {\r\n        // Presses button\r\n        this._cb()\r\n    }\r\n}\r\n\r\nexport default Button","class Camera {\r\n    constructor (pin) {\r\n        this._pin = pin\r\n        this._outVoltage = 0\r\n        this._onTrigger = () => {}\r\n    }\r\n\r\n    trigger () {\r\n        // Should possibly set to high and then set to low again?\r\n        this._outVoltage = 5\r\n        this._onTrigger()\r\n        setTimeout(() => { this._outVoltage = 0 }, 35) // Revert to 0 after 35ms\r\n    }\r\n\r\n    set onTrigger (cb) {\r\n        this._onTrigger = cb\r\n    }\r\n}\r\n\r\nexport default Camera","const DISPLAY_SLEEP_TIMEOUT = 10 * 1000 // 10s\r\n\r\nclass Display {\r\n    constructor () {\r\n        this._screenValue = ''\r\n        this._displaySleep = true\r\n        this._sleepTimeout = void 0\r\n        this._changed = () => {}\r\n    }\r\n\r\n    wake () {\r\n        clearTimeout(this._sleepTimeout) // So that if the button is pressed again within the timeframe it'll keep the screen awake\r\n        this._displaySleep = false\r\n        this._changed()\r\n        this._sleepTimeout = setTimeout(() => {\r\n            this._displaySleep = true\r\n            this._changed()\r\n        }, DISPLAY_SLEEP_TIMEOUT)\r\n    }\r\n\r\n    write (value) {\r\n        this._screenValue = value\r\n        this._changed()\r\n    }\r\n\r\n    set onChange (cb) {\r\n        this._changed = cb\r\n    }\r\n\r\n    get screenValue () {\r\n        return this._screenValue\r\n    }\r\n\r\n    get isAwake () {\r\n        return !this._displaySleep\r\n    }\r\n}\r\n\r\nexport default Display\r\n","class Tracker {\r\n    constructor() {\r\n        this._total = 0\r\n        this._ranges = []\r\n        this._onReset = () => {}\r\n    }\r\n\r\n    reset () {\r\n        this._total = 0\r\n        this._ranges = []\r\n        this._onReset()\r\n    }\r\n\r\n    track (range) {\r\n        this._total += 1\r\n        this._ranges.push(range)\r\n    }\r\n\r\n    get total () {\r\n        return this._total\r\n    }\r\n\r\n    get ranges () {\r\n        return this._ranges\r\n    }\r\n\r\n    set onReset (cb) {\r\n        this._onReset = cb\r\n    }\r\n}\r\n\r\nexport default Tracker\r\n","function getDisplayHTML (total, ranges) {\r\n    return `\r\n        <h4>Total animals: <strong>${total}</strong></h4>\r\n        <table>\r\n            <tr>\r\n                <th>Ranges of animals at trigger: </th>\r\n            </tr>\r\n            ${ranges.map(r => {\r\n                return `\r\n                    <tr>\r\n                        <td>${r}</td>\r\n                    </tr>\r\n                `\r\n            }).join('')}\r\n        </table>\r\n    `\r\n}\r\n\r\nexport default getDisplayHTML","// Simulate reading and converting sensor data.\r\n\r\nfunction convertRawRangeSensorData (rawData) {\r\n    return rawData\r\n    // return (30 / (rawData / 205)) - 2.4\r\n}\r\n\r\nexport default convertRawRangeSensorData\r\n","import RangeSensor from './RangeSensor.js'\r\nimport Button from './Button.js'\r\nimport Camera from './Camera.js'\r\nimport Display from './Display.js'\r\nimport Tracker from './Tracker.js'\r\n\r\nimport getDisplayHTML from './getDisplayHTML.js'\r\nimport { default as cs } from './convertRawRangeSensorData.js'\r\n\r\nconst LOOP_DELAY = 200 // check every 200ms\r\n\r\nconst RANGE_SENSOR_BASELINE = 10 // cm\r\nlet rangeSensorBaseline = RANGE_SENSOR_BASELINE\r\n\r\nconst DISPLAY_BUTTON_PIN = 5\r\nconst RESET_BUTTON_PIN = 6\r\nconst CALIBRATE_BUTTON_PIN = 7\r\n\r\nconst RANGE_SENSOR_PIN = 'A0'\r\n\r\nconst CAMERA_PIN = 8\r\nconst DISPLAY_PIN = 9\r\n\r\nexport const display = new Display(DISPLAY_PIN)\r\nexport const camera = new Camera(CAMERA_PIN)\r\nexport const rangeSensor = new RangeSensor(RANGE_SENSOR_PIN)\r\nexport const tracker = new Tracker()\r\n\r\nconst displayButton = new Button(DISPLAY_BUTTON_PIN, () => {\r\n    display.wake()\r\n})\r\nconst resetButton = new Button(RESET_BUTTON_PIN, () => {\r\n    tracker.reset()\r\n})\r\nconst calibrateButton = new Button(CALIBRATE_BUTTON_PIN, () => {\r\n    rangeSensorBaseline = cs(rangeSensor.read()) * 0.98\r\n})\r\n\r\nconst updateDisplay = () => {\r\n    display.write(getDisplayHTML(tracker.total, tracker.ranges))\r\n}\r\nupdateDisplay()\r\n\r\ntracker.onReset = () => {\r\n    updateDisplay()\r\n}\r\n\r\nlet animalPresent = false\r\nfunction loop () {\r\n    const range = cs(rangeSensor.read())\r\n    if (range < RANGE_SENSOR_BASELINE) {\r\n        if (animalPresent == false) {\r\n            animalPresent = true\r\n\r\n            camera.trigger()\r\n            tracker.track(range)\r\n\r\n            updateDisplay()\r\n        } else {\r\n            // Who cares, this is still the same animal and has been dealt with already.\r\n        }\r\n    } else {\r\n        animalPresent = false\r\n    }\r\n    // Check sensor all the time\r\n    setTimeout(() => loop(), LOOP_DELAY)\r\n}\r\n\r\nloop()\r\n","import { tracker, display, rangeSensor, camera } from '../../src/js/main.js'\r\n\r\nconst displayDiv = document.getElementById('display')\r\nconst simulatedRangeInput = document.getElementById('simulatedRangeInput')\r\nconst wakeButton = document.getElementById('wakeDisplayButton')\r\nconst flash = document.getElementById('cameraFlash')\r\nconst resetStatsButton = document.getElementById('resetStatsButton')\r\n\r\ndisplay.onChange = () => {\r\n    displayDiv.innerHTML = display.screenValue\r\n    display.isAwake ? displayDiv.classList.remove(\"hidden\") : displayDiv.classList.add(\"hidden\")\r\n    \r\n}\r\n\r\nresetStatsButton.onclick = () => {\r\n    tracker.reset()\r\n}\r\n\r\ncamera.onTrigger = () => {\r\n    flash.animate([\r\n        {\r\n            \"opacity\": 1\r\n        },\r\n        {\r\n            \"opacity\": 0\r\n        }\r\n    ], {\r\n        duration: 2000\r\n    })\r\n}\r\n\r\nsimulatedRangeInput.oninput = e => {\r\n    const rangeVal = (100 - e.target.value) / 10\r\n    rangeSensor.setSimulatedData(rangeVal)\r\n}\r\n\r\nwakeButton.onclick = () => {\r\n    display.wake()\r\n}\r\n"]}